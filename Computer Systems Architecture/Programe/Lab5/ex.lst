     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll                        ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll 
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15 00000000 CDAB0000FE3A0000            sir dd 0abcdh,03afeh
    16                                      len equ ($-sir)/4
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 BE[00000000]                    mov esi,sir
    22 00000005 B902000000                      mov ecx,len
    23 0000000A E30E                            jecxz final
    24                                          repeta:
    25 0000000C 51                                  push ecx
    26 0000000D B904000000                          mov ecx,4
    27 00000012 E303                                jecxz final1
    28                                              repeta1:
    29 00000014 AC                                      lodsb
    30 00000015 E2FD                                loop repeta1
    31                                              final1:
    32 00000017 59                                      pop ecx
    33 00000018 E2F2                            loop repeta
    34                                          final:
    35                                          ; exit(0)
    36 0000001A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000001C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
