     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,fprintf,fread,fclose,fopen,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fread msvcrt.dll 
    13                                  import fprintf msvcrt.dll 
    14                                  import printf msvcrt.dll                        ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19                                      len equ 100
    20                                      l equ 20
    21 00000000 00<rept>                    numefis times l db 0
    22 00000014 257300                      format db '%s',0
    23 00000017 257500                      formatn db '%u',0
    24 0000001A 7200                        modr db 'r',0
    25 0000001C 4E7520732D61206761-         mesaj db 'Nu s-a gasit fisierul cu numele introdus',0
    25 00000025 736974206669736965-
    25 0000002E 72756C206375206E75-
    25 00000037 6D656C6520696E7472-
    25 00000040 6F64757300         
    26 00000045 FFFFFFFF                    handle dd -1
    27 00000049 0000<rept>                  buffer times len db 0,0
    28                                      
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33                                          ;Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de vocale si sa se afiseze aceasta valoare. 
    34                                          
    35                                          ;citire nume fisier 
    36 00000000 68[00000000]                    push dword numefis
    37 00000005 68[14000000]                    push dword format
    38 0000000A FF15[00000000]                  call [scanf]
    39 00000010 83C408                          add esp,4*2
    40                                          
    41                                          ;deschidere fisier 
    42 00000013 68[1A000000]                    push dword modr 
    43 00000018 68[00000000]                    push dword numefis
    44 0000001D FF15[00000000]                  call [fopen] 
    45 00000023 83C408                          add esp,4*2 
    46                                          
    47 00000026 83F800                          cmp eax,0 
    48 00000029 7473                            je eroare
    49                                          
    50 0000002B BB00000000                      mov ebx,0
    51 00000030 A3[45000000]                    mov [handle],eax
    52                                          ;citire fisier 
    53                                          citeste:
    54 00000035 FF35[45000000]                      push dword [handle]
    55 0000003B 6A64                                push dword len 
    56 0000003D 6A01                                push dword 1
    57 0000003F 68[49000000]                        push dword buffer
    58 00000044 FF15[00000000]                      call [fread]
    59 0000004A 83C410                              add esp,4*4
    60                                              
    61 0000004D BE[49000000]                        mov esi,buffer
    62 00000052 89C1                                mov ecx,eax 
    63 00000054 50                                  push eax 
    64 00000055 E330                                jecxz final 
    65                                              repet:
    66 00000057 AC                                      lodsb
    67 00000058 3C61                                    cmp al,'a' 
    68 0000005A 7426                                    je adauga
    69 0000005C 3C41                                    cmp al,'A' 
    70 0000005E 7422                                    je adauga
    71 00000060 3C65                                    cmp al,'e'
    72 00000062 741E                                    je adauga
    73 00000064 3C45                                    cmp al,'E' 
    74 00000066 741A                                    je adauga
    75 00000068 3C69                                    cmp al,'i'
    76 0000006A 7416                                    je adauga
    77 0000006C 3C49                                    cmp al,'I' 
    78 0000006E 7412                                    je adauga
    79 00000070 3C6F                                    cmp al,'o'
    80 00000072 740E                                    je adauga
    81 00000074 3C4F                                    cmp al,'O' 
    82 00000076 740A                                    je adauga
    83 00000078 3C75                                    cmp al,'u'
    84 0000007A 7406                                    je adauga
    85 0000007C 3C55                                    cmp al,'U' 
    86 0000007E 7402                                    je adauga                
    87 00000080 EB03                                    jmp fin 
    88                                                  adauga:
    89 00000082 83C301                                      add ebx,1
    90                                              fin:
    91 00000085 E2D0                                loop repet
    92                                                  final:
    93 00000087 58                                  pop eax 
    94 00000088 83F864                              cmp eax,len 
    95 0000008B 74A8                                je citeste 
    96                                          
    97 0000008D FF35[45000000]                  push dword [handle]
    98 00000093 FF15[00000000]                  call [fclose]
    99 00000099 83C404                          add esp,4
   100 0000009C EB13                            jmp fine
   101                                           
   102                                          eroare:
   103 0000009E 68[1C000000]                        push dword mesaj
   104 000000A3 68[14000000]                        push dword format
   105 000000A8 FF15[00000000]                      call [printf]
   106 000000AE 83C408                              add esp,4*2 
   107                                          fine:
   108                                          
   109 000000B1 53                              push ebx 
   110 000000B2 68[17000000]                    push formatn
   111 000000B7 FF15[00000000]                  call [printf]
   112 000000BD 83C408                          add esp,4*2
   113                                          ; exit(0)
   114 000000C0 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   115 000000C2 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
