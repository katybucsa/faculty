     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 77                          a db 01110111b
    15 00000001 9B                          b db 10011011b
    16 00000002 57                          c db 01010111b
    17 00000003 BE                          d db 10111110b
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;Dandu-se 4 octeti, sa se obtina in AX suma numerelor intregi reprezentate de bitii 4-6 ai celor 4 octeti.
    23                                          
    24                                          
    25 00000000 66BB0000                        mov bx,0
    26 00000004 A0[00000000]                    mov al,[a]
    27 00000009 2470                            and al,01110000b
    28 0000000B B104                            mov cl,4
    29 0000000D D2C8                            ror al,cl
    30 0000000F B400                            mov ah,0
    31 00000011 6609C3                          or bx,ax
    32                                          
    33 00000014 A0[01000000]                    mov al,[b]
    34 00000019 2470                            and al,01110000b
    35 0000001B B104                            mov cl,4
    36 0000001D D2C8                            ror al,cl
    37 0000001F B400                            mov ah,0
    38 00000021 6611C3                          adc bx,ax
    39                                          
    40 00000024 A0[02000000]                    mov al,[c]
    41 00000029 2470                            and al,01110000b
    42 0000002B B104                            mov cl,4
    43 0000002D D2C8                            ror al,cl
    44 0000002F B400                            mov ah,0
    45 00000031 6611C3                          adc bx,ax
    46                                          
    47 00000034 A0[03000000]                    mov al,[d]
    48 00000039 2470                            and al,01110000b
    49 0000003B B104                            mov cl,4
    50 0000003D D2C8                            ror al,cl
    51 0000003F B400                            mov ah,0
    52 00000041 6611C3                          adc bx,ax
    53                                          
    54 00000044 6689D8                          mov ax,bx
    55                                          ; exit(0)
    56 00000047 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 00000049 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
