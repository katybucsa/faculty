     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 5777                        a dw 0111011101010111b
    15 00000002 9B                          b db 10011011b
    16 00000003 00000000                    c dd 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21                                          ;Se de cuvantul A si octetul B. Sa se obtina dublucuvantul C astfel:
    22                                          ;bitii 0-3 ai lui C coincid cu bitii 6-9 ai lui A
    23                                          ;bitii 4-5 ai lui C au valoarea 1
    24                                          ;bitii 6-7 ai lui C coincid cu bitii 1-2 ai lui B
    25                                          ;bitii 8-23 ai lui C coincid cu bitii lui A
    26                                          ;bitii 24-31 ai lui C coincid cu bitii lui B
    27                                          
    28                                          
    29                                          
    30 00000000 BB00000000                      mov ebx,0
    31 00000005 66A1[00000000]                  mov ax,[a]
    32 0000000B 6625C003                        and ax,0000001111000000b
    33 0000000F B106                            mov cl,6
    34 00000011 66D3C8                          ror ax,cl
    35 00000014 6683C830                        or ax,0000000000110000b
    36 00000018 66BA0000                        mov dx,0
    37 0000001C 6652                            push dx
    38 0000001E 6650                            push ax
    39 00000020 58                              pop eax
    40 00000021 09C3                            or ebx,eax
    41                                          
    42 00000023 A0[02000000]                    mov al,[b]
    43 00000028 2406                            and al,00000110b
    44 0000002A B105                            mov cl,5
    45 0000002C D2C0                            rol al,cl 
    46 0000002E B400                            mov ah,0
    47 00000030 66BA0000                        mov dx,0
    48 00000034 6652                            push dx
    49 00000036 6650                            push ax
    50 00000038 58                              pop eax
    51 00000039 09C3                            or ebx,eax
    52                                          
    53 0000003B 66A1[00000000]                  mov ax,[a]
    54 00000041 66BA0000                        mov dx,0
    55 00000045 6652                            push dx
    56 00000047 6650                            push ax
    57 00000049 58                              pop eax
    58 0000004A B108                            mov cl,8
    59 0000004C D3C0                            rol eax,cl
    60 0000004E 09C3                            or ebx,eax
    61                                          
    62 00000050 A0[02000000]                    mov al,[b]
    63 00000055 B400                            mov ah,0
    64 00000057 66BA0000                        mov dx,0
    65 0000005B 6652                            push dx
    66 0000005D 6650                            push ax
    67 0000005F 58                              pop eax
    68 00000060 B108                            mov cl,8
    69 00000062 D3C8                            ror eax,cl
    70 00000064 09C3                            or ebx,eax
    71                                          
    72 00000066 891D[03000000]                  mov[c],ebx
    73                                          ; exit(0)
    74 0000006C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    75 0000006E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
