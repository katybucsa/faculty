     1                                  ;Bucsa Ecaterina, grupa 211/2, 18.10.2017,laboratorul 3, problema 7
     2                                  ;c-(d+d+d)+(a-b)
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 07000000                a dd 7
    17 00000004 04000000                b dd 4
    18 00000008 05000000                c dd 5
    19 0000000C 01000000                d dd 1
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 A1[08000000]                mov eax,[c];eax=c
    25 00000005 8B1D[0C000000]              mov ebx,[d];ebx=d
    26 0000000B 131D[0C000000]              adc ebx,[d];ebx=d+d
    27 00000011 131D[0C000000]              adc ebx,[d];ebx=d+d+d
    28 00000017 29D8                        sub eax,ebx;eax=eax-ebx=c-(d+d+d)
    29 00000019 8B0D[00000000]              mov ecx,[a];ecx=a
    30 0000001F 2B0D[04000000]              sub ecx,[b];ecx=ecx-b=a-b
    31 00000025 01C8                        add eax,ecx;eax=eax+ecx=c-(d+d+d)+(a+b)
    32                                          ; exit(0)
    33 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
