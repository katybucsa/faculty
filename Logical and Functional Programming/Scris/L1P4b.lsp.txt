;  4.
;  b. Write a function to return the list of all permutations of a given list.

;inserarea unui elem pe o poz in lista
(defun ins(a n l)
  (cond
    ((= n 1) (cons a l)) ;pe prima pozitie 
    (t (cons (car l) (ins a (- n 1) (cdr l))))
    ;altfel pastrez primul elem si inserez pe a pe poz n-1 in cdr-ul listei l
  )
)
;inserarea unui elem pe toate pozitiile intr-o lista pana pe poz n 
(defun inser(a n l)
  (cond
    ((= n 0) nil) ;pe poz 0
    (t (cons (ins a n l) (inser a (- n 1) l)))
    ;altfel inserez pe poz n si fac acelasi lucru pana la poz n-1
  )
)

;inserarea pe toate poz a unui elem
(defun insert(a l)
  (inser a (+ (length l) 1) l) 
  ;inserez pe a in lista l pana pe poz lung listei +1
)

;inserarea unui element pe toate listele de liste pe toate pozitiile
(defun inserare(a l)
  (cond
    ((null l) nil) ;daca lista mare e vida, atunci nu mai am de inserat
    (t (append (insert a (car l)) (inserare a (cdr l))))
    ;altfel inserez pe a pe toate poz din prima lista mica si apoi la fel 
    ;in rest
  )
) 
; functia pt permutare 
(defun permut(l)
  (cond 
    ((null (cdr l)) (list(list (car l))))
    ;daca lista e vida, atunci nu are permutari
    (t (inserare (car l) (permut (cdr l))))
    ;altfel fac permutarile pt cdr-ul listei si inserez primul elem din lista
    ;pe toate pozitiile in aceste permutari
  )
)
