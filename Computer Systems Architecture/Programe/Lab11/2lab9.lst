     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll 
    10                                  import printf msvcrt.dll                         ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 00000000                    n dd 0
    16 00000004 257800                      format db '%x',0
    17 00000007 4E756D617220696E76-         mesaj  db 'Numar invalid',0
    17 00000010 616C696400         
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;Read a number from keyboard, in hexadecimal format. Validate that it is between 0 and 0xFFFF (it should be represented ;on a word). If it's not, display a message and read the number again. Open a file name
    23                                  
    24                                          ;Example: 
    25                                          ;number read: F2A1 
    26                                          ;in.txt: 0123456789abcdef
    27                                          ;output: 0579cdef
    28                                          
    29                                          citeste:
    30 00000000 68[00000000]                        push dword n
    31 00000005 68[04000000]                        push dword format
    32 0000000A FF15[00000000]                      call [scanf]
    33 00000010 83C408                              add esp,4*2
    34                                              
    35 00000013 A1[00000000]                        mov eax,[n]
    36 00000018 83F800                              cmp eax,0
    37 0000001B 7F02                                jg et
    38 0000001D EB07                                jmp sf
    39                                              et:
    40 0000001F 3DFFFF0000                              cmp eax,0ffffh
    41 00000024 7C10                                    jl et1
    42                                                  
    43                                              sf:
    44 00000026 68[07000000]                            push dword mesaj
    45 0000002B FF15[00000000]                          call[printf]
    46 00000031 83C404                                  add esp,4*1
    47 00000034 EBCA                                    jmp citeste
    48                                              
    49                                              et1:
    50 00000036 A1[00000000]                            mov eax,[n]
    51                                                  
    52                                          ; exit(0)
    53 0000003B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 0000003D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
