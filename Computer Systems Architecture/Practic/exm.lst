     1                                  ;Se citeste de la tastatura un nume de fisier si un nr n.Fisierul contine cuvinte separate prin spatiu.Se se scrie in out.txt doar cuvintele a caror lungime este egala cu n
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit,scanf,fprintf,fopen,fread,fclose,printf              ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  import fopen msvcrt.dll
    15                                  import fclose msvcrt.dll
    16                                  import printf msvcrt.dll
    17                                                   ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    18                                  
    19                                  ; our data is declared here (the variables needed by our program)
    20                                  segment data use32 class=data
    21                                      ; ...
    22                                      len equ 2000
    23                                      l equ 20
    24 00000000 0000<rept>                  numein times l db 0,0
    25 00000028 6F75742E74787400            numeout db 'out.txt',0
    26 00000030 00                          n db 0
    27 00000031 257300                      format1 db '%s',0
    28 00000034 257500                      format2 db '%u',0
    29 00000037 446573636869646572-         mesaj db 'Deschiderea fisierului nu a reusit',0
    29 00000040 656120666973696572-
    29 00000049 756C7569206E752061-
    29 00000052 2072657573697400   
    30 0000005A FFFFFFFF                    handle1 dd -1
    31 0000005E FFFFFFFF                    handle2 dd -1
    32 00000062 7200                        modr db 'r',0
    33 00000064 7700                        modw db 'w',0
    34 00000066 0000<rept>                  cuv times 30 db 0,0
    35                                      
    36 000000A2 0000<rept>                  buffer times len db 0,0
    37 00001042 00000000                    s dd 0
    38                                  ; our code starts here
    39                                  segment code use32 class=code
    40                                      start:
    41                                          ; ...
    42 00000000 68[00000000]                    push dword numein
    43 00000005 68[31000000]                    push dword format1
    44 0000000A FF15[00000000]                  call [scanf]
    45 00000010 83C408                          add esp,4*2
    46                                          
    47 00000013 68[30000000]                    push dword n 
    48 00000018 68[34000000]                    push dword format2
    49 0000001D FF15[00000000]                  call [scanf]
    50 00000023 83C408                          add esp,4*2
    51                                          
    52 00000026 68[62000000]                    push dword modr
    53 0000002B 68[00000000]                    push dword numein 
    54 00000030 FF15[00000000]                  call [fopen]
    55 00000036 83C408                          add esp,4*2
    56                                          
    57 00000039 83F800                          cmp eax,0
    58 0000003C 0F84CB000000                    je eroare 
    59                                          
    60 00000042 A3[5A000000]                    mov [handle1],eax 
    61                                          
    62 00000047 68[64000000]                    push dword modw
    63 0000004C 68[28000000]                    push dword numeout
    64 00000051 FF15[00000000]                  call [fopen]
    65 00000057 83C408                          add esp,4*2
    66                                          
    67 0000005A 83F800                          cmp eax,0
    68 0000005D 0F84AA000000                    je eroare
    69                                          
    70 00000063 A3[5E000000]                    mov [handle2],eax 
    71                                          
    72 00000068 BF[66000000]                    mov edi,cuv
    73                                          repet:
    74 0000006D FF35[5A000000]                      push dword [handle1]
    75 00000073 68D0070000                          push dword len
    76 00000078 6A01                                push dword 1
    77 0000007A 68[A2000000]                        push dword buffer
    78 0000007F FF15[00000000]                      call [fread]
    79 00000085 83C410                              add esp,4*4 
    80                                              
    81 00000088 BE[A2000000]                        mov esi,buffer  
    82 0000008D BB00000000                          mov ebx,0 
    83 00000092 89C1                                mov ecx,eax 
    84 00000094 A3[42100000]                        mov [s],eax  
    85 00000099 E346                                jecxz final
    86                                              parcurge:
    87 0000009B AC                                      lodsb
    88 0000009C 3C20                                    cmp al,' '
    89 0000009E 7406                                    je compara
    90 000000A0 AA                                      stosb 
    91 000000A1 83C301                                  add ebx,1
    92 000000A4 EB39                                    jmp loop1
    93                                                  
    94                                                  
    95                                                  compara:
    96 000000A6 8B15[30000000]                              mov edx,[n]
    97 000000AC 51                                          push ecx
    98 000000AD 39D3                                        cmp ebx,edx 
    99 000000AF 7514                                        jne f
   100                                                      
   101                                                      
   102 000000B1 68[66000000]                                push dword cuv 
   103 000000B6 FF35[5E000000]                              push dword[handle2]
   104 000000BC FF15[00000000]                              call [fprintf]
   105 000000C2 83C408                                      add esp,4*2
   106                                                       
   107                                                  
   108                                                  f:
   109 000000C5 89D9                                       mov ecx,ebx 
   110 000000C7 BF[66000000]                               mov edi,cuv  
   111 000000CC E306                                       jecxz fine
   112                                                     zero:    
   113 000000CE C60700                                      mov byte [edi],0
   114 000000D1 47                                          inc edi 
   115 000000D2 E2FA                                       loop zero
   116                                                     fine:
   117 000000D4 BB00000000                                 mov ebx,0
   118 000000D9 BF[66000000]                               mov edi,cuv
   119 000000DE 59                                          pop ecx 
   120                                                      
   121                                                      
   122                                                      
   123                                              loop1:       
   124 000000DF E2BA                                loop parcurge
   125                                              final:
   126 000000E1 A1[42100000]                        mov eax,[s]
   127 000000E6 3DD0070000                          cmp eax,len 
   128 000000EB 7480                                je repet
   129                                             
   130 000000ED FF35[5A000000]                  push dword [handle1]
   131 000000F3 FF15[00000000]                  call [fclose]
   132 000000F9 83C404                          add esp,4
   133                                          
   134 000000FC FF35[5E000000]                  push dword [handle2]
   135 00000102 FF15[00000000]                  call [fclose]
   136 00000108 83C404                          add esp,4
   137                                          
   138 0000010B EB13                            jmp fin 
   139                                          
   140                                          
   141                                          
   142                                          
   143                                          
   144                                          eroare:
   145 0000010D 68[37000000]                        push dword mesaj
   146 00000112 68[31000000]                        push dword format1
   147 00000117 FF15[00000000]                      call [printf]
   148 0000011D 83C408                              add esp,4*2
   149                                          fin:
   150                                          ; exit(0)
   151 00000120 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   152 00000122 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
