     1                                  ;Bucsa Ecaterina, grupa 211/2, 5.11.2017, tema laborator 5, problema 10
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit,printf,scanf              ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll 
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 00000000                    n dd 0
    19 00000004 6E3D00                      mesaj1 db "n=",0
    20 00000007 256400                      format_s db "%d",0
    21 0000000A 4E756D6172756C2000          mesaj2 db "Numarul ",0
    22 00000013 20696E2062617A6120-         mesaj3 db " in baza 16 este:",0
    22 0000001C 313620657374653A00 
    23 00000025 257800                      format_p db "%x",0
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                          ;Sa se citeasca de la tastatura un numar in baza 10 si sa se afiseze valoarea acelui numar in baza 16.
    29                                          ;Exemplu: Se citeste: 28; se afiseaza: 1C
    30 00000000 68[04000000]                    push dword mesaj1; se pune pe stiva adresa stringului mesaj1
    31 00000005 FF15[00000000]                  call [printf]; se afiseaza pe ecran mesaj1
    32 0000000B 83C404                          add esp,4*1; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 1-numarul de parametrii
    33                                          
    34 0000000E 68[00000000]                    push dword n; se pune pe stiva adresa lui n
    35 00000013 68[07000000]                    push dword format_s;
    36 00000018 FF15[00000000]                  call [scanf]; se apeleaza functia scanf pentru a citi n
    37 0000001E 83C408                          add esp,4*2; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 2-numarul de parametrii
    38                                          
    39 00000021 68[0A000000]                    push dword mesaj2; se pune pe stiva adresa stringului mesaj2
    40 00000026 FF15[00000000]                  call [printf]; se afiseaza pe ecran mesaj2
    41 0000002C 83C404                          add esp,4*1; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 1-numarul de parametrii
    42                                          
    43 0000002F FF35[00000000]                  push dword [n]; se pune pe stiva valoarea lui n
    44 00000035 68[07000000]                    push dword format_s
    45 0000003A FF15[00000000]                  call [printf]; se apeleaza functia printf pentru a afisa valoare lui n
    46 00000040 83C408                          add esp,4*2; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 2-numarul de parametrii
    47                                          
    48 00000043 68[13000000]                    push dword mesaj3; se pune pe stiva adresa stringului mesaj3
    49 00000048 FF15[00000000]                  call [printf]; se afiseaza pe ecran mesaj3
    50 0000004E 83C404                          add esp,4*1; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 1-numarul de parametrii
    51                                          
    52                                          
    53 00000051 FF35[00000000]                  push dword [n]; se pune pe stiva valoarea lui n
    54 00000057 68[25000000]                    push dword format_p
    55 0000005C FF15[00000000]                  call [printf]; se afiseaza valoarea lui n in baza 16
    56 00000062 83C408                          add esp,4*2; se elibereaza parametrii de pe stiva; 4-dimensiunea unui dword; 2-numarul de parametrii
    57                                          
    58                                          ; exit(0)
    59 00000065 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 00000067 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
