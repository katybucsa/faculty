     1                                  ;Bucsa Ecaterina, grupa 211/2, 10.10.2017,laboratorul 2, problema 6
     2                                  ;(a+b)-(a+d)+(c-a)
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 05                      a db 5
    17 00000001 03                      b db 3
    18 00000002 0A                      c db 10
    19 00000003 01                      d db 1
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[00000000]              mov AX,[a];AX = a
    25 00000006 660305[01000000]            add AX, [b];AX=AX+[b]=a+b
    26 0000000D 668B1D[00000000]            mov BX, [a];BX=a
    27 00000014 66031D[03000000]            add BX, [d];BX=BX+[d]=a+d
    28 0000001B 6629D8                      sub AX, BX;AX=AX-BX=(a+b)-(a+d)
    29 0000001E 668B0D[02000000]            mov CX, [c];CX=c
    30 00000025 662B0D[00000000]            sub CX,[a];CX=CX-[a]=c-a
    31 0000002C 6601C8                      add AX,CX;AX=AX+CX=(a+b)-(a+d)+(c-a)
    32                                          ; exit(0)
    33 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
