     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fclose,fread           ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll  
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll ; exit is a function that ends the calling process. It is         defined in msvcrt.dll
    12                                                                      ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 64696374696F6E6172-         nume_fis db 'dictionar.txt',0
    17 00000009 2E74787400         
    18 0000000E 7200                        mod_acces db 'r',0
    19 00000010 746578742E74787400          nume_fis1 db 'text.txt',0
    20 00000019 7200                        mod_acces1 db 'r',0
    21 0000001B FFFFFFFF                    descriptor_fis dd -1
    22 0000001F FFFFFFFF                    descriptor_fis1 dd  -1
    23 00000023 00000000                    nr_car_citite dd 0
    24 00000027 00000000                    nr_car_citite1 dd 0
    25                                      len equ 1
    26 0000002B <res 00000001>              a resb len
    27 0000002C 00<rept>                    c times 100 db 0
    28 00000090 00<rept>                    d times 100 db 0
    29 000000F4 0A                          len_c db 10
    30                                      
    31                                  ; our code starts here
    32                                  segment code use32 class=code
    33                                      start:
    34                                          ; ...
    35                                          
    36 00000000 68[0E000000]                    push dword mod_acces
    37 00000005 68[00000000]                    push dword nume_fis
    38 0000000A FF15[00000000]                  call [fopen]
    39 00000010 83C408                          add esp, 4*2
    40                                          
    41 00000013 A3[1B000000]                    mov [descriptor_fis],eax
    42                                          
    43 00000018 83F800                          cmp eax,0
    44 0000001B 7445                            je final
    45                                          
    46                                          
    47 0000001D BF00000000                      mov edi,0
    48                                          bucla:
    49 00000022 FF35[1B000000]                      push dword [descriptor_fis]
    50 00000028 6A01                                push dword len
    51 0000002A 6A01                                push dword 1
    52 0000002C 68[2B000000]                        push dword a
    53 00000031 FF15[00000000]                      call [fread]
    54 00000037 83C410                              add esp, 4*4
    55                                              
    56                                              
    57 0000003A 8A1D[2B000000]                      mov bl,[a]
    58 00000040 889F[2C000000]                      mov [c+edi],bl 
    59 00000046 47                                  inc edi
    60                                              
    61                                              
    62 00000047 83F800                              cmp eax, 0
    63 0000004A 7407                                je cleanup
    64                                              
    65 0000004C A3[23000000]                        mov [nr_car_citite],eax
    66                                              
    67 00000051 EBCF                                jmp bucla
    68                                              
    69                                          cleanup:
    70 00000053 FF35[1B000000]                      push dword [descriptor_fis]
    71 00000059 FF15[00000000]                      call [fclose]
    72 0000005F 83C404                              add esp, 4
    73                                              
    74                                          final:
    75                                              ;mov bl,0
    76                                              ;dec edi
    77                                              ;mov [c+edi],bl
    78                                           
    79                                              
    80                                          
    81 00000062 68[19000000]                    push dword mod_acces1
    82 00000067 68[10000000]                    push dword nume_fis1
    83 0000006C FF15[00000000]                  call [fopen]
    84 00000072 83C408                          add esp, 4*2
    85                                          
    86 00000075 A3[1F000000]                    mov [descriptor_fis1],eax
    87                                          
    88 0000007A 83F800                          cmp eax,0
    89 0000007D 7464                            je final1
    90                                          
    91                                          
    92 0000007F BF00000000                      mov edi,0
    93                                          bucla1:
    94 00000084 FF35[1F000000]                      push dword [descriptor_fis1]
    95 0000008A 6A01                                push dword len
    96 0000008C 6A01                                push dword 1
    97 0000008E 68[2B000000]                        push dword a
    98 00000093 FF15[00000000]                      call [fread]
    99 00000099 83C410                              add esp, 4*4
   100                                              
   101 0000009C 8A1D[2B000000]                      mov bl,[a]
   102 000000A2 80FB30                              cmp bl,'0'
   103 000000A5 7C17                                jl adauga
   104                                              
   105 000000A7 80FB39                              cmp bl, '9'
   106 000000AA 7F12                                jg adauga
   107                                              
   108 000000AC 8B35[2B000000]                      mov esi, [a]
   109 000000B2 83EE30                              sub esi, 48
   110 000000B5 668B9E[2C000000]                    mov bx, [c+esi]
   111 000000BC EB00                                jmp adauga
   112                                              
   113                                              adauga:
   114 000000BE 66899F[90000000]                        mov [d+edi],bx
   115 000000C5 47                                      inc edi
   116 000000C6 EB00                                    jmp sfarsit1
   117                                                  
   118                                              sfarsit1:
   119 000000C8 83F800                                  cmp eax,0
   120 000000CB 7407                                    je cleanup1
   121 000000CD A3[27000000]                            mov [nr_car_citite1],eax
   122                                                  
   123 000000D2 EBB0                                    jmp bucla1
   124                                                  
   125                                          cleanup1:
   126 000000D4 FF35[1F000000]                  push dword [descriptor_fis1]
   127 000000DA FF15[00000000]                  call [fclose]
   128 000000E0 83C404                          add esp,4
   129                                          
   130                                          final1:
   131                                              
   132                                              
   133                                              
   134                                          ; exit(0)
   135 000000E3 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   136 000000E5 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
