     1                                  ;Bucsa Ecaterina, grupa 211/2, 18.12.2017,laboratorul 11, problema 12
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit,printf               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import printf msvcrt.dll                         ; msvcrt.dll contains exit, printf and all the other important C-runtime       specific functions
    12                                  
    13                                  extern intercalare
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 
    16                                      ; ...
    17 00000000 616263646566676800          s1 db "abcdefgh",0
    18 00000009 696A6B6C6D6E6F7000          s2 db "ijklmnop",0
    19                                      len equ $-s2-1
    20 00000012 <res 00000011>              d1 resb len*2+1
    21 00000023 <res 00000011>              d2 resb len*2+1
    22 00000034 25730A0D00                  format db "%s",10,13,0
    23                                  ; our code starts here
    24                                  segment code use32 public code
    25                                      start:
    26                                          ; ...
    27                                          ;Se dau doua siruri de caractere de lungimi egale. Se cere sa se calculeze si afiseze rezultatele intercalarii literelor, pentru cele doua intercalari posibile (literele din primul sir pe pozitii pare, si li
    28                                          
    29                                          
    30 00000000 BE[00000000]                    mov esi,s1
    31 00000005 BF[12000000]                    mov edi,d1
    32 0000000A B808000000                      mov eax, len
    33 0000000F BA00000000                      mov edx,0
    34 00000014 50                              push eax
    35 00000015 E8(00000000)                    call intercalare
    36                                          
    37 0000001A BE[09000000]                    mov esi,s2
    38 0000001F BF[12000000]                    mov edi,d1 
    39 00000024 47                              inc edi 
    40 00000025 B808000000                      mov eax, len
    41 0000002A BA01000000                      mov edx,1
    42 0000002F 50                              push eax
    43 00000030 E8(00000000)                    call intercalare
    44                                          
    45 00000035 68[12000000]                    push dword d1
    46 0000003A 68[34000000]                    push dword format
    47 0000003F FF15[00000000]                  call [printf]
    48 00000045 83C408                          add esp,4*2
    49                                          
    50                                          
    51                                          
    52 00000048 BE[09000000]                    mov esi,s2
    53 0000004D BF[23000000]                    mov edi,d2
    54 00000052 B808000000                      mov eax, len
    55 00000057 BA00000000                      mov edx,0
    56 0000005C 50                              push eax
    57 0000005D E8(00000000)                    call intercalare
    58                                          
    59 00000062 BE[00000000]                    mov esi,s1
    60 00000067 BF[23000000]                    mov edi,d2
    61 0000006C 47                              inc edi 
    62 0000006D B808000000                      mov eax, len
    63 00000072 BA01000000                      mov edx,1
    64 00000077 50                              push eax
    65 00000078 E8(00000000)                    call intercalare
    66                                          
    67                                          
    68 0000007D 68[23000000]                    push dword d2
    69 00000082 68[34000000]                    push dword format
    70 00000087 FF15[00000000]                  call [printf]
    71 0000008D 83C408                          add esp,4*2
    72                                        ; exit(0)
    73 00000090 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 00000092 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
