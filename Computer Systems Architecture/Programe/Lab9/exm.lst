     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,fprintf,printf,fread,fopen,fclose,rename,remove               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  import printf msvcrt.dll
    15                                  import remove msvcrt.dll
    16                                  import rename msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20                                      ; ...
    21                                      len equ 100 
    22                                      l equ 20
    23 00000000 0000<rept>                  nume1 times l db 0,0
    24 00000028 65786D2E74787400            nume2 db 'exm.txt',0
    25 00000030 FFFFFFFF                    handle1 dd -1
    26 00000034 FFFFFFFF                    handle2 dd -1
    27 00000038 7200                        modr db 'r',0
    28 0000003A 7700                        modw db 'w',0
    29 0000003C 45726F617265206465-         mesaj db 'Eroare deschidere fisier',0
    29 00000045 736368696465726520-
    29 0000004E 66697369657200     
    30 00000055 0000<rept>                  buffer times len db 0,0
    31 0000011D 257300                      format db '%s',0
    32 00000120 257500                      formatnr db '%u',0
    33 00000123 00                          nr db 0
    34                                      
    35                                      
    36                                  ; our code starts here
    37                                  segment code use32 class=code
    38                                      start:
    39                                          ; ...
    40 00000000 68[00000000]                    push dword nume1
    41 00000005 68[1D010000]                    push dword format
    42 0000000A FF15[00000000]                  call [scanf] 
    43 00000010 83C408                          add esp,4*2 
    44                                          
    45 00000013 68[23010000]                    push dword nr
    46 00000018 68[20010000]                    push dword formatnr
    47 0000001D FF15[00000000]                  call [scanf]
    48 00000023 83C408                          add esp,4*2
    49                                          
    50 00000026 68[38000000]                    push dword modr 
    51 0000002B 68[00000000]                    push dword nume1 
    52 00000030 FF15[00000000]                  call [fopen]
    53 00000036 83C408                          add esp,4*2
    54                                          
    55 00000039 83F800                          cmp eax,0 
    56 0000003C 0F84E4000000                    je eroare
    57 00000042 A3[30000000]                    mov [handle1],eax 
    58                                          
    59 00000047 68[3A000000]                    push dword modw
    60 0000004C 68[28000000]                    push dword nume2
    61 00000051 FF15[00000000]                  call [fopen]
    62 00000057 83C408                          add esp,4*2
    63                                          
    64 0000005A 83F800                          cmp eax,0
    65 0000005D 0F84C3000000                    je eroare
    66 00000063 A3[34000000]                    mov [handle2],eax 
    67                                          
    68                                          repet:
    69 00000068 FF35[30000000]                      push dword [handle1]
    70 0000006E 6A64                                push dword len 
    71 00000070 6A01                                push dword 1
    72 00000072 68[55000000]                        push dword buffer
    73 00000077 FF15[00000000]                      call [fread]
    74 0000007D 83C410                              add esp,4*4
    75                                              
    76 00000080 BE[55000000]                        mov esi,buffer
    77 00000085 BF[55000000]                        mov edi,buffer 
    78 0000008A 89C1                                mov ecx,eax 
    79 0000008C E341                                jecxz final
    80                                              parcurge:
    81 0000008E AC                                      lodsb 
    82 0000008F 3C41                                    cmp al,'A'
    83 00000091 7C3A                                    jl fine 
    84 00000093 3C7A                                    cmp al,'z'
    85 00000095 7736                                    ja fine
    86 00000097 3C5A                                    cmp al,'Z'
    87 00000099 7E07                                    jle bun1 
    88 0000009B 3C61                                    cmp al,'a'
    89 0000009D 7310                                    jae bun2 
    90 0000009F AA                                      stosb 
    91 000000A0 EB2B                                    jmp fine 
    92                                                  
    93                                                  bun1:
    94 000000A2 0205[23010000]                              add al,[nr]
    95 000000A8 3C5A                                        cmp al,'Z'
    96 000000AA 7710                                        ja scade1 
    97 000000AC AA                                          stosb
    98 000000AD EB1E                                        jmp fine 
    99                                                   
   100                                                  bun2:
   101 000000AF 0205[23010000]                              add al,[nr]
   102 000000B5 3C7A                                        cmp al,'z'
   103 000000B7 770C                                        ja scade2
   104 000000B9 AA                                          stosb
   105 000000BA EB11                                        jmp fine 
   106                                                      
   107                                                  scade1:
   108 000000BC 2C1A                                        sub al,26
   109 000000BE 3C5A                                        cmp al,'Z'
   110 000000C0 77FA                                        ja scade1
   111 000000C2 AA                                          stosb
   112 000000C3 EB08                                        jmp fine 
   113                                                  
   114                                                  scade2:
   115 000000C5 2C1A                                        sub al,26
   116 000000C7 3C7A                                        cmp al,'z'
   117 000000C9 AA                                          stosb
   118 000000CA 8846FF                                      mov [esi-1],al 
   119                                                       
   120                                              fine:
   121 000000CD E2BF                                loop parcurge 
   122                                              final:
   123                                                  
   124 000000CF 68[55000000]                            push dword buffer
   125 000000D4 FF35[34000000]                          push dword [handle2]
   126 000000DA FF15[00000000]                          call [fprintf]
   127 000000E0 83C408                                  add esp,4*2 
   128                                                  
   129 000000E3 83F864                                  cmp eax,len 
   130 000000E6 7480                                    je repet 
   131                                                  
   132 000000E8 FF35[30000000]                          push dword[handle1]
   133 000000EE FF15[00000000]                          call  [fclose]
   134 000000F4 83C404                                  add esp,4
   135                                                  
   136 000000F7 FF35[34000000]                          push dword[handle2]
   137 000000FD FF15[00000000]                          call [fclose]
   138 00000103 83C404                                  add esp,4
   139                                                  
   140 00000106 68[00000000]                            push dword nume1 
   141 0000010B FF15[00000000]                          call [remove]
   142                                                  
   143 00000111 68[00000000]                            push dword nume1
   144 00000116 68[28000000]                            push dword nume2 
   145 0000011B FF15[00000000]                          call[rename]
   146 00000121 83C408                                  add esp,4*2 
   147                                                  
   148 00000124 EB13                                    jmp fin
   149                                                  
   150                                                  
   151                                              
   152                                          
   153                                          eroare:
   154 00000126 68[3C000000]                        push dword mesaj
   155 0000012B 68[1D010000]                        push dword format
   156 00000130 FF15[00000000]                      call [printf]
   157 00000136 83C408                              add esp,4*2
   158                                          fin:
   159                                          ; exit(0)
   160 00000139 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   161 0000013B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
