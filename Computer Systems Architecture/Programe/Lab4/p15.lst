     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 5777                        a dw 0111011101010111b
    15 00000002 BE9B                        b dw 1001101110111110b
    16 00000004 00000000                    c dd 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21                                          ;Se dau cuvintele A si B. Se cere dublucuvantul C:
    22                                          ;bitii 0-2 ai lui C au valoarea 0
    23                                          ;bitii 3-5 ai lui C au valoarea 1
    24                                          ;bitii 6-9 ai lui C coincid cu bitii 11-14 ai lui A
    25                                          ;bitii 10-15 ai lui C coincid cu bitii 1-6 ai lui B
    26                                          ;bitii 16-31 ai lui C au valoarea 1
    27                                          
    28                                          
    29 00000000 BB00000000                      mov ebx,0
    30 00000005 83CB38                          or ebx,00000000000000000000000000111000b
    31                                          
    32 00000008 66A1[00000000]                  mov ax,[a]
    33 0000000E 66250078                        and ax,0111100000000000b
    34 00000012 B105                            mov cl,5
    35 00000014 66D3C8                          ror ax,cl
    36 00000017 66BA0000                        mov dx,0
    37 0000001B 6652                            push dx
    38 0000001D 6650                            push ax
    39 0000001F 58                              pop eax
    40 00000020 09C3                            or ebx,eax
    41                                          
    42 00000022 66A1[02000000]                  mov ax,[b]
    43 00000028 6683E07E                        and ax,0000000001111110b
    44 0000002C B109                            mov cl,9
    45 0000002E 66D3C0                          rol ax,cl
    46 00000031 66BA0000                        mov dx,0
    47 00000035 6652                            push dx
    48 00000037 6650                            push ax
    49 00000039 58                              pop eax
    50 0000003A 09C3                            or ebx,eax
    51                                          
    52 0000003C 81CB0000FFFF                    or ebx,11111111111111110000000000000000b
    53                                          
    54 00000042 891D[04000000]                  mov[c],ebx
    55                                          
    56                                          ; exit(0)
    57 00000048 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 0000004A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
