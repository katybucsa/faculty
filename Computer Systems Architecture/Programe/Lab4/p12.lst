     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 5777                        a dw 0111011101010111b
    15 00000002 BE9B                        b dw 1001101110111110b
    16 00000004 00000000                    c dd 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21                                          ;Se dau doua cuvinte A si B. Sa se obtina dublucuvantul C:
    22                                          ;bitii 0-6 ai lui C au valoarea 0
    23                                          ;bitii 7-9 ai lui C coincid cu bitii 0-2 ai lui A
    24                                          ;bitii 10-15 ai lui C coincid cu bitii 8-13 ai lui B
    25                                          ;bitii 16-31 ai lui C au valoarea 1
    26                                          
    27 00000000 BB00000000                      mov ebx,0
    28 00000005 66A1[00000000]                  mov ax,[a]
    29 0000000B 6683E007                        and ax,0000000000000111b
    30 0000000F B107                            mov cl,7
    31 00000011 66D3C0                          rol ax,cl
    32 00000014 66BA0000                        mov dx,0
    33 00000018 6652                            push dx
    34 0000001A 6650                            push ax
    35 0000001C 58                              pop eax
    36 0000001D 09C3                            or ebx,eax
    37                                          
    38                                          
    39 0000001F 66A1[02000000]                  mov ax,[b]
    40 00000025 6625003F                        and ax,0011111100000000b
    41 00000029 B102                            mov cl,2
    42 0000002B 66D3C0                          rol ax,cl
    43 0000002E 66BA0000                        mov dx,0
    44 00000032 6652                            push dx
    45 00000034 6650                            push ax
    46 00000036 58                              pop eax
    47 00000037 09C3                            or ebx,eax
    48                                          
    49 00000039 81CB0000FFFF                    or ebx,11111111111111110000000000000000b
    50                                          
    51 0000003F 891D[04000000]                  mov[c],ebx
    52                                          ; exit(0)
    53 00000045 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000047 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
